name: build windows
on:
  push: {tags:  ['v*']} #  Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request: 
  
permissions:
  contents: write

env:
  MINGWSDK: /opt/mingwsdk

jobs:
  build_llvmmingw:
    strategy:
      matrix: 
        arch: [{prefix: i686, suffix: x86}, {prefix: x86_64, suffix: x64}, {prefix: x86_64, suffix: x64d}]

    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4

    - name: init enviroment
      run: |
        sudo apt-get -y -qq install p7zip-full git make cmake
        curl -fsSL https://github.com/mstorsjo/llvm-mingw/releases/download/20240619/llvm-mingw-20240619-msvcrt-ubuntu-20.04-x86_64.tar.xz -o /tmp/llvm-mingw.tar.xz
        tar xf /tmp/llvm-mingw.tar.xz -C /tmp
        _tmppath=/tmp/llvm-mingw-20240619-msvcrt-ubuntu-20.04-x86_64 
        sudo mv -f ${_tmppath} $MINGWSDK

    - name: build ${{ matrix.arch.suffix }}
      run: |
        mkdir build
        export PATH=${MINGWSDK}/bin:$PATH
        export CC=${{ matrix.arch.prefix }}-w64-mingw32-clang
        export WINDRES=${{ matrix.arch.prefix }}-w64-mingw32-windres
        export BUILD_DIR=build
        if [[  "${{ matrix.arch.suffix }}" =~ "d" ]]; then
          export BUILD_TYPE=Debug
        else
          export BUILD_TYPE=MinSizeRel
        fi
        bash script/build_mingw.sh
    
    - name: prepare release
      run: |
        if [[ ! "${{  github.ref_name }}" =~ "merge" ]]; then
          mv build/TileViewer.exe TileViewer_${{  github.ref_name }}_${{ matrix.arch.suffix }}_win.exe
        fi
      
    - name: create release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'push'
      with:
        artifacts: "TileViewer_*.exe"
        allowUpdates: "true"
        token: ${{ secrets.GITHUB_TOKEN }}

  build_mingw:
    strategy:
      matrix: 
        arch: [{prefix: i686, suffix: x86_xp}]

    runs-on: ubuntu-22.04 # 24.04 gcc-13 might not worked ? 
    steps:
    - uses: actions/checkout@v4

    - name: init enviroment
      run: |
        sudo apt-get -y -qq install p7zip-full git make cmake
        sudo apt-get -y -qq install mingw-w64
        ${{ matrix.arch.prefix }}-w64-mingw32-gcc --version

    - name: build ${{ matrix.arch.suffix }}
      run: |
        mkdir build
        export PATH=${MINGWSDK}/bin:$PATH
        export CC=${{ matrix.arch.prefix }}-w64-mingw32-gcc
        export CXX=${{ matrix.arch.prefix }}-w64-mingw32-g++
        export WINDRES=${{ matrix.arch.prefix }}-w64-mingw32-windres
        export BUILD_DIR=build
        export BUILD_TYPE=MinSizeRel
        bash script/build_mingw.sh
    
    - name: prepare release
      run: |
        if [[ ! "${{  github.ref_name }}" =~ "merge" ]]; then
          mv build/TileViewer.exe TileViewer_${{  github.ref_name }}_${{ matrix.arch.suffix }}_win.exe
        fi
        cd asset; 7z a plugin.zip plugin ; cd ..
        mv asset/plugin.zip plugin.zip 
      
    - name: create release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'push'
      with:
        artifacts: "TileViewer_*.exe,plugin.zip"
        allowUpdates: "true"
        token: ${{ secrets.GITHUB_TOKEN }}